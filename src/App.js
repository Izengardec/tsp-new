import React from "react";
import { BrowserRouter as Router, Switch, Route, Link } from "react-router-dom";
import "./styles.css";

export default function App() {
  return (
    <Router>
      <div className="wraper">
        <a name="top"></a>
        <div className="content">
          <nav>
            <ul>
              <li>
                <Link className="menu" to="/">
                  React
                </Link>
              </li>
              <li>
                <Link className="menu" to="/vue">
                  Vue
                </Link>
              </li>
              <li>
                <Link className="menu" to="/ember">
                  Ember
                </Link>
              </li>
            </ul>
          </nav>

          {/* A <Switch> looks through its children <Route>s and
            renders the first one that matches the current URL. */}
          <Switch>
            <Route path="/vue">
              <Vue />
            </Route>
            <Route path="/ember">
              <Ember />
            </Route>
            <Route path="/">
              <Home />
            </Route>
          </Switch>
        </div>
        <div className="footer">
          <p>Автор: Партанский Илья</p>
          <a href="#top">
            <img
              class="up"
              src="https://img2.freepng.ru/20180320/wae/kisspng-arrow-computer-icons-clip-art-purple-up-arrow-png-5ab153fede4d95.1505420015215708149106.jpg"
            ></img>
          </a>
        </div>
      </div>
    </Router>
  );
}

function Home() {
  return (
    <h2>
      <br />
      React (иногда React.js или ReactJS) — JavaScript-библиотека[5] с открытым
      исходным кодом для разработки пользовательских интерфейсов. React
      разрабатывается и поддерживается Facebook, Instagram и сообществом
      отдельных разработчиков и корпораций[6][7][8]. React может использоваться
      для разработки одностраничных и мобильных приложений. Его цель —
      предоставить высокую скорость, простоту и масштабируемость. В качестве
      библиотеки для разработки пользовательских интерфейсов React часто
      используется с другими библиотеками, такими как MobX, Redux и GraphQL[9].
      React был создан Джорданом Валке, разработчиком программного обеспечения
      из Facebook. На него оказал влияние XHP — компонентный HTML-фреймворк для
      PHP[10]. Впервые React использовался в новостной ленте Facebook в 2011
      году и позже в ленте Instagram в 2012 году[11]. Исходный код React открыт
      в мае 2013 года на конференции «JSConf US». React Native анонсирован на
      конференции Facebook «React.js Conf» в феврале 2015 года, а исходный код
      открыт в марте 2015 года. Он позволяет разрабатывать нативные Android-,
      iOS- и UWP-приложения с использованием React. 18 апреля 2017 года Facebook
      анонсировал React Fiber, переписанную и оптимизированную версию React[12].
      React Fiber станет основой разработки всех будущих функций и
      улучшений[13]. Однонаправленная передача данных Свойства передаются от
      родительских компонентов к дочерним. Компоненты получают свойства как
      множество неизменяемых (англ. immutable) значений, поэтому компонент не
      может напрямую изменять свойства, но может вызывать изменения через
      callback-функции. Такой механизм называют «свойства вниз, события наверх».
      Виртуальный DOM React использует виртуальный DOM (англ. virtual DOM).
      React создаёт кэш-структуру в памяти, что позволяет вычислять разницу
      между предыдущим и текущим состояниями интерфейса для оптимального
      обновления DOM браузера. Таким образом программист может работать со
      страницей, считая, что она обновляется вся, но библиотека самостоятельно
      решает, какие компоненты страницы необходимо обновить. JSX JavaScript XML
      (JSX) — это расширение синтаксиса JavaScript, которое позволяет
      использовать HTML-подобный синтаксис для описания структуры интерфейса.
      Как правило, компоненты написаны с использованием JSX, но также есть
      возможность использования обычного JavaScript[14]. JSX напоминает другой
      язык, созданный в компании Фейсбук для расширения PHP, XHP . Методы
      жизненн
    </h2>
  );
}

function Vue() {
  return (
    <h2>
      <br />
      Vue.js (также Vue; /vjuː/) — JavaScript-фреймворк с открытым исходным
      кодом для создания пользовательских интерфейсов[4]. Легко интегрируется в
      проекты с использованием других JavaScript-библиотек. Может
      функционировать как веб-фреймворк для разработки одностраничных приложений
      в реактивном стиле. На данный момент поддерживается им и остальными
      активными членами основной команды из различных компаний, таких как
      Netlify, Netguru,Baidu,Livestorm,.[5] Опрос, проведенный в 2016 году для
      JavaScript, показал, что Vue имеет 89 % удовлетворенности разработчиков.
      На GitHub проект зарабатывает в среднем 95 звезд[6][7] является третьим по
      величине проектом в истории Github. В 2013 году сотрудник Google Эван Ю
      (Evan You), работая над одним из проектов, пришёл к выводу, что не
      существует готовых решений для быстрого прототипирования сложных
      пользовательских интерфейсов веб-приложений: React тогда был на ранней
      стадии разработки, основными инструментами были такие сложные фреймворки,
      как AngularJS или ориентированный на MVC-архитектуру Backbone.js, не
      отличавшиеся простотой и ориентированные на разработку больших приложений.
      Для преодоления этого пробела Ю начал разработку Vue.js, которая, сохраняя
      простоту, оказалась пригодна не только для прототипирования, но и для
      полноценной разработки[8]. В октябре 2015 года была выпущена версия 1.0
      библиотеки, в сентябре 2016 года — версия 2.0. Начиная с версии 2.0 он
      поддерживает также рендеринг на стороне сервера, он же SSR (Server-Side
      Rendering)[9]. 18 cентября 2020 года была выпущена версия Vue.js 3.0.0
      «One Piece», по словам разработчиков «обеспечивает улучшенную
      производительность, меньший размер пакетов, лучшую интеграцию с
      TypeScript, новые API для решения крупномасштабных задач и прочную основу
      для будущих итераций фреймворка в долгосрочной перспективе»[10]. Релиз 3.0
      вобрал в себя более 2 лет усилий по разработке, включая более 30 RFC,
      более 2600 коммитов, 628 запросов от 99 разработчиков, плюс огромный объём
      работы над разработкой и документацией. Весь код был переписан на более
      эффективный TypeScript, TypeScript 96,8%, что даёт преимущества в гибкой
      разработке. Также представлен новый набор API Composition[11], Концепция
      Разработчики называют Vue.js как прогрессивный и постепенно адаптируемый
      по сравнению с другими веб-фреймворками. Это позволяет используемому
      разработчику настроить структуру приложения в соответствии с собственными
      требованиями. Разработчики считают что Vue.js считается более простым в
      освоении, чем AngularJS, поскольку API построен намного проще в освоении.
      В Vue.js можно использовать, только знания JavaScript, HTML ,а необходимым
      для использования используют typescript. У Vue.js есть собственная
      официальная документация на многих языках, выложенные на vuejs.org[12]
      достаточно богатым документация, как один из примеров в объяснении
      проектированным и разработкой в браузере. В Vue.js реализуется шаблон
      MVVM, Vue.js предлагает на javascript возможность привязки данных, так что
      вывод и ввод данных сопрягаются непосредственно с источником данных. Таким
      образом, режим ручного определения данных (например, через jQuery) из
      HTML-DOM не нужен. При этом нет никаких дополнительных аннотаций, как в
      Knockout.js необходимости, объявлений в Vue-Element, обычные
      Переменные—JavaScript включаются в качестве реактивных элементов.
    </h2>
  );
}

function Ember() {
  return (
    <h2>
      <br />
      Ember.js — свободный каркас веб-приложений на JavaScript, реализующий
      шаблон MVC и нацеленный на упрощение создания масштабируемых
      одностраничных веб-приложений[4]. Фактически является версией 2.0 каркаса
      SproutCore (в декабре 2011 года был переименован в Ember.js для отличия от
      SproutCore 1.0)[5][6]. Основные авторы — Том Дейл и Йегуда Кац, всего в
      основной команде разработчиков — более 10 человек. Применяется на таких
      сайтах, как TED, Yahoo!, Twitch.tv и Groupon[7].Основные внутренние
      концепты, используемые каркасом — маршруты, модели, контроллеры и шаблоны.
      Маршруту объекта соответствует URL-адрес, который определяет текущее
      состояние приложения. Маршруты определены в единственном объекте
      маршрутизатора[8]. Концепция маршрутов подчёркивают важность URL в
      управлении состоянием приложения. Каждому маршруту соответствует модель, в
      которой содержатся данные, соответствующие текущему состоянию приложения.
      И несмотря на то, что есть возможность использовать jQuery чтобы загружать
      с сервера JSON-объекты, большинство приложений все-таки использует для
      этих целей библиотеку с моделью данных, например, Ember Data. Контроллеры
      используются для того, чтобы добавить модели некую логику отображения.
      Ранее стандартной практикой было наследовать контроллер от
      ObjectController если модель представляла собой один объект, и от
      ArrayController — если модель была массивом записей. Сейчас эти базовые
      классы считаются устаревшими и нормальной практикой считается обращение к
      свойствам модели из Ember.Controller. Шаблоны написаны на языке HTMLBars и
      описывают пользовательский интерфейс. Шаблоны используются для построения
      HTML кода приложения и позволяют встраивать в него динамически обновляемые
      выражения.
    </h2>
  );
}
